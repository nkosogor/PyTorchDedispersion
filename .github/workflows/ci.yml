name: CI

on:
  push:
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    env:
      CI: "1"                     # switch tests into fast mode
      OMP_NUM_THREADS: "1"
      MKL_NUM_THREADS: "1"
      OPENBLAS_NUM_THREADS: "1"
      NUMEXPR_NUM_THREADS: "1"
      CUDA_VISIBLE_DEVICES: ""    # ensure CPU-only

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: ["3.9", "3.10", "3.11"]

      - name: Upgrade pip/setuptools/wheel
        run: python -m pip install -U pip setuptools wheel

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/pyproject.toml') }}
          restore-keys: ${{ runner.os }}-pip-

      - name: Install PyTorch (CPU wheels)
        run: pip install torch --index-url https://download.pytorch.org/whl/cpu

      - name: Install project (dev + fil)
        run: pip install -e .[dev,fil]

      - name: Install pytest-timeout
        run: pip install pytest-timeout

      - name: Show versions
        run: |
          python -V
          python - <<'PY'
          import torch, os
          print("torch", torch.__version__, "cuda?", torch.cuda.is_available())
          for k in ["OMP_NUM_THREADS","MKL_NUM_THREADS","OPENBLAS_NUM_THREADS","NUMEXPR_NUM_THREADS"]:
              print(k, os.environ.get(k))
          PY

      - name: Run tests
        run: |
          pytest -vv --durations=20 --maxfail=1 \
                 --timeout=300 --timeout-method=thread \
                 --cov=pytorch_dedispersion \
                 --cov-report=term-missing:skip-covered \
                 --cov-report=xml

      - name: Upload coverage.xml
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-xml-py39
          path: coverage.xml

  docs:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - name: Install docs deps
        run: pip install .[docs]
      - name: Build docs (no deploy)
        run: mkdocs build --strict
